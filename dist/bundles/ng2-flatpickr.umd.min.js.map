{
  "version": 3,
  "file": "ng2-flatpickr.umd.min.js",
  "sources": [
    "ng://ng2-flatpickr/out/src/ng2-flatpickr.component.ts",
    "ng://ng2-flatpickr/out/src/ng2-flatpickr.directive.ts",
    "ng://ng2-flatpickr/out/src/ng2-flatpickr.module.ts"
  ],
  "sourcesContent": [
    "import { Component, ViewChild, AfterViewInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FlatpickrOptions } from './flatpickr-options.interface';\r\n\r\ndeclare var require: any;\r\n\r\nif(typeof window !== 'undefined'){\r\n    require( 'flatpickr' );\r\n}\r\n\r\n@Component({\r\n\tselector: 'ng2-flatpickr',\r\n\ttemplate: `\r\n\t\t<div class=\"ng2-flatpickr-input-container\" #flatpickr>\r\n\t\t\t<input *ngIf=\"!hideButton\" class=\"ng2-flatpickr-input {{ addClass }}\" [placeholder]=\"placeholder\" [tabindex]=\"tabindex\" type=\"text\" data-input>\r\n\t\t\t<ng-content></ng-content>\r\n\t\t</div>\r\n\t\t`,\r\n\tproviders: [\r\n\t\t{\r\n\t\t\tprovide: NG_VALUE_ACCESSOR,\r\n\t\t\tuseExisting: forwardRef( () => Ng2FlatpickrComponent ),\r\n\t\t\tmulti: true\r\n\t\t}\r\n\t]\r\n})\r\nexport class Ng2FlatpickrComponent implements AfterViewInit, ControlValueAccessor, OnChanges {\r\n\r\n  public flatpickr: Object;\r\n  private _tabindex = 0;\r\n\r\n\tprivate defaultFlatpickrOptions: FlatpickrOptions = {\r\n\t\twrap: true,\r\n\t\tclickOpens: true,\r\n\t\tonChange: ( selectedDates: any ) => { this.writeValue( selectedDates ); }\r\n\t};\r\n\r\n\t@ViewChild('flatpickr')\r\n\tflatpickrElement: any;\r\n\r\n\t@Input()\r\n\tconfig: FlatpickrOptions;\r\n\r\n\t@Input()\r\n\tplaceholder: string = \"\";\r\n\r\n  @Input()\r\n\taddClass: string = \"\";\r\n\r\n\t@Input()\r\n\tsetDate: string | Date;\r\n\r\n  @Input()\r\n  get tabindex() { return this._tabindex; }\r\n  set tabindex( ti: number ) { this._tabindex = Number( ti ); }\r\n\r\n\t@Input()\r\n\thideButton = false;\r\n\r\n\t///////////////////////////////////\r\n\r\n\twriteValue( value:any ) {\r\n\t\tthis.propagateChange( value );\r\n\t}\r\n\r\n\tregisterOnChange( fn: any ) {\r\n\t\tthis.propagateChange = fn;\r\n\t}\r\n\r\n\tregisterOnTouched() {}\r\n\r\n\tpropagateChange = ( _: any ) => {};\r\n\r\n\t///////////////////////////////////\r\n\r\n\tsetDateFromInput( date: any ) {\r\n\t\tthis.flatpickrElement.nativeElement._flatpickr.setDate( date, true );\r\n\t}\r\n\r\n\tsetAltInputPlaceholder( placeholder: string ) {\r\n\t\tthis.flatpickrElement.nativeElement._flatpickr.altInput.setAttribute( 'placeholder', placeholder );\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tif( this.config ) {\r\n\t\t\tObject.assign( this.defaultFlatpickrOptions, this.config );\r\n\t\t}\r\n\t\tthis.flatpickr = this.flatpickrElement.nativeElement.flatpickr( this.defaultFlatpickrOptions );\r\n\t\tif( this.setDate ) {\r\n\t\t\tthis.setDateFromInput( this.setDate );\r\n\t\t}\r\n\t}\r\n\r\n\tngOnChanges( changes: SimpleChanges ) {\r\n\t\tif( this.flatpickrElement.nativeElement \r\n\t\t\t&& this.flatpickrElement.nativeElement._flatpickr ) {\r\n\t\t\t\t\r\n\t\t\t\tif( changes.hasOwnProperty( 'setDate' ) \r\n\t\t\t\t\t&& changes[ 'setDate' ].currentValue ) {\r\n\t\t\t\t\t\tthis.setDateFromInput( changes[ 'setDate' ].currentValue );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tif( this.config.altInput\r\n\t\t\t\t\t&& changes.hasOwnProperty( 'placeholder' ) \r\n\t\t\t\t\t&& changes[ 'placeholder' ].currentValue ) {\r\n\t\t\t\t\t\tthis.setAltInputPlaceholder( changes[ 'placeholder' ].currentValue );\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t}\r\n}\r\n",
    "import {\r\n\tAfterViewInit, Directive, ElementRef, EventEmitter, HostListener, Input,\r\n\tOnDestroy, OnInit, Output, Renderer, SimpleChanges, OnChanges\r\n} from '@angular/core';\r\nimport { ControlContainer, FormControl, NgControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FlatpickrEvent } from './flatpickr-event.interface';\r\nimport { FlatpickrInstance } from './flatpickr-instance';\r\nimport { FlatpickrOptions } from './flatpickr-options.interface';\r\n\r\n@Directive({ selector: '[flatpickr]', exportAs: 'ng2-flatpickr' })\r\nexport class Ng2FlatpickrDirective implements AfterViewInit, OnDestroy, OnInit, OnChanges {\r\n\t/**\r\n\t * The flatpickr configuration as a single object of values.\r\n\t *\r\n\t * See https://chmln.github.io/flatpickr/options/ for full list.\r\n\t */\r\n\t@Input( 'flatpickr' ) public flatpickrOptions: FlatpickrOptions;\r\n\r\n\t/**\r\n\t * Placeholder for input field.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'placeholder' ) public placeholder: string;\r\n\r\n\t/**\r\n\t * Exactly the same as date format, but for the altInput field.\r\n\t *\r\n\t * Default:  \"F j, Y\"\r\n\t */\r\n\t@Input( 'altFormat' ) public flatpickrAltFormat: string;\r\n\r\n\t/**\r\n\t * Show the user a readable date (as per altFormat), but return something\r\n\t * totally different to the server.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'altInput' ) public flatpickrAltInput: boolean;\r\n\r\n\t/**\r\n\t * This class will be added to the input element created by the altInput\r\n\t * option.\r\n\t *\r\n\t * Default:  \"\"\r\n\t */\r\n\t@Input( 'altInputClass' ) public flatpickrAltInputClass: string;\r\n\r\n\t/**\r\n\t * Allows the user to enter a date directly input the input field. By\r\n\t * default, direct entry is disabled.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'allowInput' ) public flatpickrAllowInput: boolean;\r\n\r\n\t/**\r\n\t * Instead of body, appends the calendar to the specified node instead.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'appendTo' ) public flatpickrAppendTo: HTMLElement;\r\n\r\n\t/**\r\n\t * Whether clicking on the input should open the picker.\r\n\t * You could disable this if you wish to open the calendar manually\r\n\t * with.open().\r\n\t *\r\n\t * Default:  true\r\n\t */\r\n\t@Input( 'clickOpens' ) public flatpickrClickOpens: boolean;\r\n\r\n\t/**\r\n\t * A string of characters which are used to define how the date will be\r\n\t * displayed in the input box.\r\n\t * See https://chmln.github.io/flatpickr/formatting/ for supported tokens.\r\n\t *\r\n\t * Default:  \"Y-m-d\"\r\n\t */\r\n\t@Input( 'dateFormat' ) public flatpickrDateFormat: string;\r\n\r\n\t/**\r\n\t * Sets the initial selected date(s).\r\n\t *\r\n\t * If you're using {mode: \"multiple\"} or a range calendar supply an Array of\r\n\t * Date objects or an Array of date strings which follow your dateFormat.\r\n\t *\r\n\t * Otherwise, you can supply a single Date object or a date string.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'defaultDate' ) public flatpickrDefaultDate: string | Date;\r\n\r\n\t/**\r\n\t * Disable an array of specific dates, date ranges, or functions to disable\r\n\t * dates. See https://chmln.github.io/flatpickr/examples/#disabling-specific-dates\r\n\t *\r\n\t * Default:  []\r\n\t */\r\n\t@Input( 'disable' ) public flatpickrDisable: string[] | Date[];\r\n\r\n\t/**\r\n\t * Set disableMobile to true to always use the non-native picker. By\r\n\t * default, Flatpickr utilizes native datetime widgets unless certain\r\n\t * options (e.g. disable) are used.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'disableMobile' ) public flatpickrDisableMobile: boolean;\r\n\r\n\t/**\r\n\t * Enable an array of specific dates, date ranges, or functions to enable\r\n\t * dates. See https://chmln.github.io/flatpickr/examples/#disabling-all-dates-except-select-few\r\n\t *\r\n\t * Default:  []\r\n\t */\r\n\t@Input( 'enable' ) public flatpickrEnable: string[] | Date[];\r\n\r\n\t/**\r\n\t * Enables time picker.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'enableTime' ) public flatpickrEnableTime: boolean;\r\n\r\n\t/**\r\n\t * Enables seconds in the time picker.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'enableSeconds' ) public flatpickrEnableSeconds: boolean;\r\n\r\n\t/**\r\n\t * Adjusts the step for the hour input (incl. scrolling).\r\n\t *\r\n\t * Default:  1\r\n\t */\r\n\t@Input( 'hourIncrement' ) public flatpickrHourIncrement: number;\r\n\r\n\t/**\r\n\t * Displays the calendar inline.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'inline' ) public flatpickrInline: boolean;\r\n\r\n\t/**\r\n\t * Use a specific locale for the flatpickr instance.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'locale' ) public flatpickrLocale: Object;\r\n\r\n\t/**\r\n\t * The maximum date that a user can pick to (inclusive).\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'maxDate' ) public flatpickrMaxDate: string | Date;\r\n\r\n\t/**\r\n\t * The minimum date that a user can start picking from (inclusive).\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'minDate' ) public flatpickrMinDate: string | Date;\r\n\r\n\t/**\r\n\t * Adjusts the step for the minute input (incl. scrolling).\r\n\t *\r\n\t * Default:  5\r\n\t */\r\n\t@Input( 'minuteIncrement' ) public flatpickrMinuteIncrement: number;\r\n\r\n\t/**\r\n\t * \"single\", \"multiple\", or \"range\"\r\n\t *\r\n\t * Default:  \"single\"\r\n\t */\r\n\t@Input( 'mode' ) public flatpickrMode: string;\r\n\r\n\t/**\r\n\t * HTML for the arrow icon, used to switch months.\r\n\t *\r\n\t * Default:  \">\"\r\n\t */\r\n\t@Input( 'nextArrow' ) public flatpickrNextArrow: string;\r\n\r\n\t/**\r\n\t * Hides the day selection in calendar. Use it along with enableTime to\r\n\t * create a time picker.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'noCalendar' ) public flatpickrNoCalendar: boolean;\r\n\r\n\t/**\r\n\t * Function that expects a date string and must return a Date object.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'parseDate' ) public flatpickrParseDate: Function;\r\n\r\n\t/**\r\n\t * HTML for the left arrow icon.\r\n\t *\r\n\t * Default:  \"<\"\r\n\t */\r\n\t@Input( 'prevArrow' ) public flatpickrPrevArrow: string;\r\n\r\n\t/**\r\n\t * Show the month using the shorthand version (ie, Sep instead of September).\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'shorthandCurrentMonth' ) public flatpickrShorthandCurrentMonth: boolean;\r\n\r\n\t/**\r\n\t * Position the calendar inside the wrapper and next to the input element\r\n\t * (Leave false unless you know what you're doing).\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'static' ) public flatpickrStatic: boolean;\r\n\r\n\t/**\r\n\t * Displays time picker in 24 hour mode without AM/PM selection when enabled.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'time_24hr' ) public flatpickrTime_24hr: boolean;\r\n\r\n\t@Input( 'utc' ) public flatpickrUtc: boolean;\r\n\r\n\t/**\r\n\t * Enables display of week numbers in calendar.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'weekNumbers' ) public flatpickrWeekNumbers: boolean;\r\n\r\n\t/**\r\n\t * Custom elements and input groups.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'wrap' ) public flatpickrWrap: boolean;\r\n\r\n\t/**\r\n\t * onChange gets triggered when the user selects a date, or changes the time on a selected date.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Output( 'onChange' ) public flatpickrOnChange: EventEmitter<FlatpickrEvent> = new EventEmitter();\r\n\r\n\t/**\r\n\t * onClose gets triggered when the calendar is closed.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Output( 'onClose' ) public flatpickrOnClose: EventEmitter<FlatpickrEvent> = new EventEmitter();\r\n\r\n\t/**\r\n\t * onOpen gets triggered when the calendar is opened.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Output( 'onOpen' ) public flatpickrOnOpen: EventEmitter<FlatpickrEvent> = new EventEmitter();\r\n\r\n\t/**\r\n\t * onReady gets triggered once the calendar is in a ready state.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Output( 'onReady' ) public flatpickrOnReady: EventEmitter<FlatpickrEvent> = new EventEmitter();\r\n\r\n\t/** Allow double-clicking on the control to open/close it. */\r\n\t@HostListener( 'dblclick' )\r\n\tpublic onClick() {\r\n\t\tthis.flatpickr.toggle();\r\n\t}\r\n\r\n\tprotected globalOnChange: Function;\r\n\tprotected globalOnClose: Function;\r\n\tprotected globalOnOpen: Function;\r\n\tprotected globalOnReady: Function;\r\n\r\n\tprotected flatpickr: FlatpickrInstance;\r\n\tprotected formControlListener: Subscription;\r\n\r\n\t/** Allow access properties using index notation */\r\n\t[key:string]: any;\r\n\r\n\tconstructor(\r\n\t\tprotected parent: ControlContainer,\r\n\t\tprotected ngControl: NgControl,\r\n\t\tprotected element: ElementRef,\r\n\t\tprotected renderer: Renderer\r\n\t) {}\r\n\r\n\tget control(): FormControl {\r\n\t\treturn this.parent ? this.parent.formDirective.getControl(this.ngControl) : null;\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\t/** We cannot initialize the flatpickr instance in ngOnInit(); it will\r\n\t\t\trandomize the date when the form control initializes. */\r\n\t\tlet nativeElement = this.element.nativeElement;\r\n\r\n\t\tif (typeof nativeElement === 'undefined' || nativeElement === null) {\r\n\t\t\tthrow 'Error: invalid input element specified';\r\n\t\t}\r\n\r\n\t\tif (this.flatpickrOptions.wrap) {\r\n\t\t\tthis.renderer.setElementAttribute( this.element.nativeElement, 'data-input', '' );\r\n\t\t\tnativeElement = nativeElement.parentNode;\r\n\t\t}\r\n\r\n\t\tthis.flatpickr = <FlatpickrInstance>nativeElement.flatpickr( this.flatpickrOptions );\r\n\t}\r\n\r\n\tngOnChanges( changes: SimpleChanges ) {\r\n\t\tif( this.flatpickr\r\n\t\t\t&& this.flatpickrAltInput\r\n\t\t\t&& changes.hasOwnProperty( 'placeholder' ) \r\n\t\t\t&& changes[ 'placeholder' ].currentValue ) {\r\n\t\t\t\tthis.flatpickr.altInput.setAttribute( 'placeholder', changes[ 'placeholder' ].currentValue );\r\n\t\t\t}\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.flatpickr) {\r\n\t\t\tthis.flatpickr.destroy();\r\n\t\t}\r\n\r\n\t\tif (this.formControlListener) {\r\n\t\t\tthis.formControlListener.unsubscribe();\r\n\t\t\tthis.formControlListener = undefined;\r\n\t\t}\r\n\r\n\t\tthis.flatpickrOnChange = undefined;\r\n\t\tthis.flatpickrOnClose = undefined;\r\n\t\tthis.flatpickrOnOpen = undefined;\r\n\t\tthis.flatpickrOnReady = undefined;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.globalOnChange = this.flatpickrOptions.onChange;\r\n\t\tthis.globalOnClose = this.flatpickrOptions.onClose;\r\n\t\tthis.globalOnOpen = this.flatpickrOptions.onOpen;\r\n\t\tthis.globalOnReady = this.flatpickrOptions.onReady;\r\n\r\n\t\tthis.flatpickrOptions = {\r\n\t\t\taltFormat: this.getOption('altFormat'),\r\n\t\t\taltInput: this.getOption('altInput'),\r\n\t\t\taltInputClass: this.getOption('altInputClass'),\r\n\t\t\tallowInput: this.getOption('allowInput'),\r\n\t\t\tappendTo: this.getOption('appendTo'),\r\n\t\t\tclickOpens: this.getOption('clickOpens', true),\r\n\t\t\tdateFormat: this.getOption('dateFormat'),\r\n\t\t\tdefaultDate: this.getOption('defaultDate'),\r\n\t\t\tdisable: this.getOption('disable'),\r\n\t\t\tdisableMobile: this.getOption('disableMobile'),\r\n\t\t\tenable: this.getOption('enable'),\r\n\t\t\tenableTime: this.getOption('enableTime'),\r\n\t\t\tenableSeconds: this.getOption('enableSeconds'),\r\n\t\t\thourIncrement: this.getOption('hourIncrement'),\r\n\t\t\tinline: this.getOption('inline'),\r\n\t\t\tlocale: this.getOption('locale'),\r\n\t\t\tmaxDate: this.getOption('maxDate'),\r\n\t\t\tminDate: this.getOption('minDate'),\r\n\t\t\tminuteIncrement: this.getOption('minuteIncrement'),\r\n\t\t\tmode: this.getOption('mode'),\r\n\t\t\tnextArrow: this.getOption('nextArrow'),\r\n\t\t\tnoCalendar: this.getOption('noCalendar'),\r\n\t\t\tonChange: this.eventOnChange,\r\n\t\t\tonClose: this.eventOnClose,\r\n\t\t\tonOpen: this.eventOnOpen,\r\n\t\t\tonReady: this.eventOnReady,\r\n\t\t\tparseDate: this.getOption('parseDate'),\r\n\t\t\tprevArrow: this.getOption('prevArrow'),\r\n\t\t\tshorthandCurrentMonth: this.getOption('shorthandCurrentMonth'),\r\n\t\t\tstatic: this.getOption('static'),\r\n\t\t\ttime_24hr: this.getOption('time_24hr'),\r\n\t\t\tutc: this.getOption('utc'),\r\n\t\t\tweekNumbers: this.getOption('weekNumbers'),\r\n\t\t\twrap: this.getOption('wrap', true),\r\n\t\t};\r\n\r\n\t\t// Remove unset properties\r\n\t\tObject.keys( this.flatpickrOptions ).forEach( ( key: string ) => {\r\n\t\t\t(this.flatpickrOptions[key] === undefined) &&\r\n\t\t\t\tdelete this.flatpickrOptions[key];\r\n\t\t} );\r\n\r\n\t\tif (this.control) {\r\n\t\t\tthis.formControlListener = this.control.valueChanges\r\n\t\t\t\t.subscribe( ( value: any ) => {\r\n\t\t\t\t\tif ( !( value instanceof Date ) ) {\r\n\t\t\t\t\t\t// Quietly update the value of the form control to be a\r\n\t\t\t\t\t\t// Date object. This avoids any external subscribers\r\n\t\t\t\t\t\t// from being notified a second time (once for the user\r\n\t\t\t\t\t\t// initiated event, and once for our conversion to\r\n\t\t\t\t\t\t// Date()).\r\n\t\t\t\t\t\tthis.control.setValue( new Date( '' + value ), {\r\n\t\t\t\t\t\t\tonlySelf: true,\r\n\t\t\t\t\t\t\temitEvent: false,\r\n\t\t\t\t\t\t\temitModelToViewChange: false,\r\n\t\t\t\t\t\t\temitViewToModelChange: false\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fire off the event emitter for the directive element, and also for the\r\n\t * global onChange callback, if defined.\r\n\t */\r\n\tprotected eventOnChange( selectedDates: Date[], dateStr: string, instance: Object ): void {\r\n\t\tlet event: FlatpickrEvent = {\r\n\t\t\tselectedDates: selectedDates,\r\n\t\t\tdateStr: dateStr,\r\n\t\t\tinstance: instance\r\n\t\t};\r\n\t\tif ( this.flatpickrOnChange ) {\r\n\t\t\tthis.flatpickrOnChange.emit( event );\r\n\t\t}\r\n\t\tif( this.globalOnChange ) {\r\n\t\t\tthis.globalOnChange( event );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fire off the event emitter for the directive element, and also for the\r\n\t * global onClose callback, if defined.\r\n\t */\r\n\tprotected eventOnClose( selectedDates: Date[], dateStr: string, instance: Object ): void {\r\n\t\tlet event: FlatpickrEvent = {\r\n\t\t\tselectedDates: selectedDates,\r\n\t\t\tdateStr: dateStr,\r\n\t\t\tinstance: instance\r\n\t\t};\r\n\t\tif ( this.flatpickrOnClose ) {\r\n\t\t\tthis.flatpickrOnClose.emit( event );\r\n\t\t}\r\n\t\tif( this.globalOnClose ) {\r\n\t\t\tthis.globalOnClose( event );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fire off the event emitter for the directive element, and also for the\r\n\t * global onOpen callback, if defined.\r\n\t */\r\n\tprotected eventOnOpen( selectedDates: Date[], dateStr: string, instance: Object ): void {\r\n\t\tlet event: FlatpickrEvent = {\r\n\t\t\tselectedDates: selectedDates,\r\n\t\t\tdateStr: dateStr,\r\n\t\t\tinstance: instance\r\n\t\t};\r\n\t\tif ( this.flatpickrOnOpen ) {\r\n\t\t\tthis.flatpickrOnOpen.emit( event );\r\n\t\t}\r\n\t\tif( this.globalOnOpen ) {\r\n\t\t\tthis.globalOnOpen( event );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fire off the event emitter for the directive element, and also for the\r\n\t * global onReady callback, if defined.\r\n\t */\r\n\tprotected eventOnReady( selectedDates: Date[], dateStr: string, instance: Object ): void {\r\n\t\tlet event: FlatpickrEvent = {\r\n\t\t\tselectedDates: selectedDates,\r\n\t\t\tdateStr: dateStr,\r\n\t\t\tinstance: instance\r\n\t\t};\r\n\t\tif ( this.flatpickrOnReady ) {\r\n\t\t\tthis.flatpickrOnReady.emit( event );\r\n\t\t}\r\n\t\tif( this.globalOnReady ) {\r\n\t\t\tthis.globalOnReady( event );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Return the configuration value for option {option}, or {defaultValue} if it\r\n\t * doesn't exist.\r\n\t */\r\n\tprotected getOption( option: string, defaultValue?: any ): any {\r\n\t\tlet localName = 'flatpickr' + option.substring( 0, 1 ).toUpperCase()\r\n\t\t\t+ option.substring( 1 );\r\n\r\n\t\tif ( typeof this[localName] !== 'undefined' ) {\r\n\t\t\treturn this[localName];\r\n\t\t} else if ( typeof this.flatpickrOptions[option] !== 'undefined' ) {\r\n\t\t\treturn this.flatpickrOptions[option];\r\n\t\t} else {\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\t}\r\n}\r\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Ng2FlatpickrComponent } from './ng2-flatpickr.component';\nimport { Ng2FlatpickrDirective } from './ng2-flatpickr.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        Ng2FlatpickrComponent,\n        Ng2FlatpickrDirective\n    ],\n    exports: [\n        Ng2FlatpickrComponent,\n        Ng2FlatpickrDirective\n    ]\n})\nexport class Ng2FlatpickrModule {\n}"
  ],
  "names": [
    "window",
    "require",
    "Ng2FlatpickrComponent",
    "_this",
    "this",
    "_tabindex",
    "defaultFlatpickrOptions",
    "wrap",
    "clickOpens",
    "onChange",
    "selectedDates",
    "writeValue",
    "placeholder",
    "addClass",
    "hideButton",
    "propagateChange",
    "_",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "set",
    "ti",
    "Number",
    "value",
    "registerOnChange",
    "fn",
    "registerOnTouched",
    "setDateFromInput",
    "date",
    "flatpickrElement",
    "nativeElement",
    "_flatpickr",
    "setDate",
    "setAltInputPlaceholder",
    "altInput",
    "setAttribute",
    "ngAfterViewInit",
    "config",
    "assign",
    "flatpickr",
    "ngOnChanges",
    "changes",
    "hasOwnProperty",
    "currentValue",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "providers",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "multi",
    "ViewChild",
    "Input",
    "tabindex",
    "Ng2FlatpickrDirective",
    "parent",
    "ngControl",
    "element",
    "renderer",
    "flatpickrOnChange",
    "EventEmitter",
    "flatpickrOnClose",
    "flatpickrOnOpen",
    "flatpickrOnReady",
    "onClick",
    "toggle",
    "formDirective",
    "getControl",
    "flatpickrOptions",
    "setElementAttribute",
    "parentNode",
    "flatpickrAltInput",
    "ngOnDestroy",
    "destroy",
    "formControlListener",
    "unsubscribe",
    "undefined",
    "ngOnInit",
    "globalOnChange",
    "globalOnClose",
    "onClose",
    "globalOnOpen",
    "onOpen",
    "globalOnReady",
    "onReady",
    "altFormat",
    "getOption",
    "altInputClass",
    "allowInput",
    "appendTo",
    "dateFormat",
    "defaultDate",
    "disable",
    "disableMobile",
    "enable",
    "enableTime",
    "enableSeconds",
    "hourIncrement",
    "inline",
    "locale",
    "maxDate",
    "minDate",
    "minuteIncrement",
    "mode",
    "nextArrow",
    "noCalendar",
    "eventOnChange",
    "eventOnClose",
    "eventOnOpen",
    "eventOnReady",
    "parseDate",
    "prevArrow",
    "shorthandCurrentMonth",
    "static",
    "time_24hr",
    "utc",
    "weekNumbers",
    "keys",
    "forEach",
    "key",
    "control",
    "valueChanges",
    "subscribe",
    "Date",
    "setValue",
    "onlySelf",
    "emitEvent",
    "emitModelToViewChange",
    "emitViewToModelChange",
    "dateStr",
    "instance",
    "event",
    "emit",
    "option",
    "defaultValue",
    "localName",
    "substring",
    "toUpperCase",
    "Directive",
    "exportAs",
    "ControlContainer",
    "NgControl",
    "ElementRef",
    "Renderer",
    "flatpickrAltFormat",
    "flatpickrAltInputClass",
    "flatpickrAllowInput",
    "flatpickrAppendTo",
    "flatpickrClickOpens",
    "flatpickrDateFormat",
    "flatpickrDefaultDate",
    "flatpickrDisable",
    "flatpickrDisableMobile",
    "flatpickrEnable",
    "flatpickrEnableTime",
    "flatpickrEnableSeconds",
    "flatpickrHourIncrement",
    "flatpickrInline",
    "flatpickrLocale",
    "flatpickrMaxDate",
    "flatpickrMinDate",
    "flatpickrMinuteIncrement",
    "flatpickrMode",
    "flatpickrNextArrow",
    "flatpickrNoCalendar",
    "flatpickrParseDate",
    "flatpickrPrevArrow",
    "flatpickrShorthandCurrentMonth",
    "flatpickrStatic",
    "flatpickrTime_24hr",
    "flatpickrUtc",
    "flatpickrWeekNumbers",
    "flatpickrWrap",
    "Output",
    "HostListener",
    "Ng2FlatpickrModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "2XAMqB,oBAAXA,QACNC,QAAS,aAmBb,IAAAC,EAAA,WAhBA,SAAAA,IAAA,IAAAC,EAAAC,KAmBUA,KAAVC,UAAsB,EAEbD,KAATE,wBAAqD,CACnDC,MAAM,EACNC,YAAY,EACZC,SAAU,SAAEC,GAA0BP,EAAKQ,WAAYD,KAUxDN,KAADQ,YAAuB,GAGtBR,KAADS,SAAoB,GAUnBT,KAADU,YAAc,EAcbV,KAADW,gBAAmB,SAAEC,YAnBnBC,OAAFC,eACMhB,EADNiB,UAAA,WAAA,CAAAC,IAAE,WACiB,OAAOhB,KAAKC,WAC/BgB,IAAE,SAAcC,GAAelB,KAAKC,UAAYkB,OAAQD,oCAOvDpB,EAADiB,UAAAR,WAAC,SAAYa,GACXpB,KAAKW,gBAAiBS,IAGvBtB,EAADiB,UAAAM,iBAAC,SAAkBC,GACjBtB,KAAKW,gBAAkBW,GAGxBxB,EAADiB,UAAAQ,kBAAC,aAMAzB,EAADiB,UAAAS,iBAAC,SAAkBC,GACjBzB,KAAK0B,iBAAiBC,cAAcC,WAAWC,QAASJ,GAAM,IAG/D3B,EAADiB,UAAAe,uBAAC,SAAwBtB,GACvBR,KAAK0B,iBAAiBC,cAAcC,WAAWG,SAASC,aAAc,cAAexB,IAGtFV,EAADiB,UAAAkB,gBAAC,WACKjC,KAAKkC,QACRrB,OAAOsB,OAAQnC,KAAKE,wBAAyBF,KAAKkC,QAEnDlC,KAAKoC,UAAYpC,KAAK0B,iBAAiBC,cAAcS,UAAWpC,KAAKE,yBACjEF,KAAK6B,SACR7B,KAAKwB,iBAAkBxB,KAAK6B,UAI9B/B,EAADiB,UAAAsB,YAAC,SAAaC,GACRtC,KAAK0B,iBAAiBC,eACtB3B,KAAK0B,iBAAiBC,cAAcC,aAElCU,EAAQC,eAAgB,YACxBD,EAAkB,QAAGE,cACvBxC,KAAKwB,iBAAkBc,EAAkB,QAAGE,cAG1CxC,KAAKkC,OAAOH,UACZO,EAAQC,eAAgB,gBACxBD,EAAsB,YAAGE,cAC3BxC,KAAK8B,uBAAwBQ,EAAsB,YAAGE,kBA/E5D,iBAhBA,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACVC,SAAU,gBACVC,SAAU,yQAMVC,UAAW,CACV,CACCC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAY,WAAM,OAAApD,IAC/BqD,OAAO,0BAeVzB,iBAAA,CAAA,CAAAe,KAAEW,EAAAA,UAAFT,KAAA,CAAY,eAGZT,OAAA,CAAA,CAAAO,KAAEY,EAAAA,QAGF7C,YAAA,CAAA,CAAAiC,KAAEY,EAAAA,QAGF5C,SAAA,CAAA,CAAAgC,KAAGY,EAAAA,QAGHxB,QAAA,CAAA,CAAAY,KAAEY,EAAAA,QAGFC,SAAA,CAAA,CAAAb,KAAGY,EAAAA,QAIH3C,WAAA,CAAA,CAAA+B,KAAEY,EAAAA,SCxDF,IAAAE,EAAA,WAsSC,SAADA,EACYC,EACAC,EACAC,EACAC,GAHA3D,KAAZwD,OAAYA,EACAxD,KAAZyD,UAAYA,EACAzD,KAAZ0D,QAAYA,EACA1D,KAAZ2D,SAAYA,EA5CkB3D,KAA9B4D,kBAAgF,IAAIC,EAAAA,aAOvD7D,KAA7B8D,iBAA8E,IAAID,EAAAA,aAOtD7D,KAA5B+D,gBAA4E,IAAIF,EAAAA,aAOnD7D,KAA7BgE,iBAA8E,IAAIH,EAAAA,oBAI1EN,EAARxC,UAAAkD,QAAQ,WACNjE,KAAKoC,UAAU8B,UAqBhBrD,OAADC,eAAKyC,EAALxC,UAAA,UAAA,CAAAC,IAAC,WACC,OAAOhB,KAAKwD,OAASxD,KAAKwD,OAAOW,cAAcC,WAAWpE,KAAKyD,WAAa,sCAG7EF,EAADxC,UAAAkB,gBAAC,WAGD,IAAMN,EAAgB3B,KAAK0D,QAAQ/B,cAEjC,GAAI,MAAOA,EACV,KAAM,yCAGH3B,KAAKqE,iBAAiBlE,OACzBH,KAAK2D,SAASW,oBAAqBtE,KAAK0D,QAAQ/B,cAAe,aAAc,IAC7EA,EAAgBA,EAAc4C,YAG/BvE,KAAKoC,UAA+BT,EAAcS,UAAWpC,KAAKqE,mBAGnEd,EAADxC,UAAAsB,YAAC,SAAaC,GACRtC,KAAKoC,WACLpC,KAAKwE,mBACLlC,EAAQC,eAAgB,gBACxBD,EAAsB,YAAGE,cAC3BxC,KAAKoC,UAAUL,SAASC,aAAc,cAAeM,EAAsB,YAAGE,eAIjFe,EAADxC,UAAA0D,YAAC,WACKzE,KAAKoC,WACRpC,KAAKoC,UAAUsC,UAGZ1E,KAAK2E,sBACR3E,KAAK2E,oBAAoBC,cACzB5E,KAAK2E,oBAAsBE,WAG5B7E,KAAK4D,kBAAoBiB,UACzB7E,KAAK8D,iBAAmBe,UACxB7E,KAAK+D,gBAAkBc,UACvB7E,KAAKgE,iBAAmBa,WAGzBtB,EAADxC,UAAA+D,SAAC,WAAA,IAAD/E,EAAAC,KACEA,KAAK+E,eAAiB/E,KAAKqE,iBAAiBhE,SAC5CL,KAAKgF,cAAgBhF,KAAKqE,iBAAiBY,QAC3CjF,KAAKkF,aAAelF,KAAKqE,iBAAiBc,OAC1CnF,KAAKoF,cAAgBpF,KAAKqE,iBAAiBgB,QAE3CrF,KAAKqE,iBAAmB,CACvBiB,UAAWtF,KAAKuF,UAAU,aAC1BxD,SAAU/B,KAAKuF,UAAU,YACzBC,cAAexF,KAAKuF,UAAU,iBAC9BE,WAAYzF,KAAKuF,UAAU,cAC3BG,SAAU1F,KAAKuF,UAAU,YACzBnF,WAAYJ,KAAKuF,UAAU,cAAc,GACzCI,WAAY3F,KAAKuF,UAAU,cAC3BK,YAAa5F,KAAKuF,UAAU,eAC5BM,QAAS7F,KAAKuF,UAAU,WACxBO,cAAe9F,KAAKuF,UAAU,iBAC9BQ,OAAQ/F,KAAKuF,UAAU,UACvBS,WAAYhG,KAAKuF,UAAU,cAC3BU,cAAejG,KAAKuF,UAAU,iBAC9BW,cAAelG,KAAKuF,UAAU,iBAC9BY,OAAQnG,KAAKuF,UAAU,UACvBa,OAAQpG,KAAKuF,UAAU,UACvBc,QAASrG,KAAKuF,UAAU,WACxBe,QAAStG,KAAKuF,UAAU,WACxBgB,gBAAiBvG,KAAKuF,UAAU,mBAChCiB,KAAMxG,KAAKuF,UAAU,QACrBkB,UAAWzG,KAAKuF,UAAU,aAC1BmB,WAAY1G,KAAKuF,UAAU,cAC3BlF,SAAUL,KAAK2G,cACf1B,QAASjF,KAAK4G,aACdzB,OAAQnF,KAAK6G,YACbxB,QAASrF,KAAK8G,aACdC,UAAW/G,KAAKuF,UAAU,aAC1ByB,UAAWhH,KAAKuF,UAAU,aAC1B0B,sBAAuBjH,KAAKuF,UAAU,yBACtC2B,SAAQlH,KAAKuF,UAAU,UACvB4B,UAAWnH,KAAKuF,UAAU,aAC1B6B,IAAKpH,KAAKuF,UAAU,OACpB8B,YAAarH,KAAKuF,UAAU,eAC5BpF,KAAMH,KAAKuF,UAAU,QAAQ,IAI9B1E,OAAOyG,KAAMtH,KAAKqE,kBAAmBkD,QAAS,SAAEC,GAC9CzH,EAAKsE,iBAAiBmD,KAAS3C,kBACxB9E,EAAKsE,iBAAiBmD,KAG3BxH,KAAKyH,UACRzH,KAAK2E,oBAAsB3E,KAAKyH,QAAQC,aACtCC,UAAW,SAAEvG,GACLA,aAAiBwG,MAMxB7H,EAAK0H,QAAQI,SAAU,IAAID,KAAM,GAAKxG,GAAS,CAC9C0G,UAAU,EACVC,WAAW,EACXC,uBAAuB,EACvBC,uBAAuB,QAWnB1E,EAAXxC,UAAA4F,cAAW,SAAerG,EAAuB4H,EAAiBC,GAClE,IAAMC,EAAwB,CAC3B9H,cAAeA,EACf4H,QAASA,EACTC,SAAUA,GAENnI,KAAK4D,mBACT5D,KAAK4D,kBAAkByE,KAAMD,GAE1BpI,KAAK+E,gBACR/E,KAAK+E,eAAgBqD,IAQb7E,EAAXxC,UAAA6F,aAAW,SAActG,EAAuB4H,EAAiBC,GACjE,IAAMC,EAAwB,CAC3B9H,cAAeA,EACf4H,QAASA,EACTC,SAAUA,GAENnI,KAAK8D,kBACT9D,KAAK8D,iBAAiBuE,KAAMD,GAEzBpI,KAAKgF,eACRhF,KAAKgF,cAAeoD,IAQZ7E,EAAXxC,UAAA8F,YAAW,SAAavG,EAAuB4H,EAAiBC,GAChE,IAAMC,EAAwB,CAC3B9H,cAAeA,EACf4H,QAASA,EACTC,SAAUA,GAENnI,KAAK+D,iBACT/D,KAAK+D,gBAAgBsE,KAAMD,GAExBpI,KAAKkF,cACRlF,KAAKkF,aAAckD,IAQX7E,EAAXxC,UAAA+F,aAAW,SAAcxG,EAAuB4H,EAAiBC,GACjE,IAAMC,EAAwB,CAC3B9H,cAAeA,EACf4H,QAASA,EACTC,SAAUA,GAENnI,KAAKgE,kBACThE,KAAKgE,iBAAiBqE,KAAMD,GAEzBpI,KAAKoF,eACRpF,KAAKoF,cAAegD,IAQZ7E,EAAXxC,UAAAwE,UAAW,SAAW+C,EAAgBC,GACtC,IAAMC,EAAY,YAAcF,EAAOG,UAAW,EAAG,GAAIC,cACpDJ,EAAOG,UAAW,GAErB,MAAgC,oBAApBzI,KAAKwI,GACTxI,KAAKwI,GACwC,oBAAlCxI,KAAKqE,iBAAiBiE,GACjCtI,KAAKqE,iBAAiBiE,GAEtBC,KArfV,iBAUA,CAAA9F,KAACkG,EAAAA,UAADhG,KAAA,CAAW,CAAEC,SAAU,cAAegG,SAAU,uDANhD,CAAAnG,KAASoG,EAAAA,kBAAT,CAAApG,KAAwCqG,EAAAA,WAHxC,CAAArG,KAA2BsG,EAAAA,YAC3B,CAAAtG,KAA4BuG,EAAAA,8BAe5B3E,iBAAA,CAAA,CAAA5B,KAAEY,EAAAA,MAAFV,KAAA,CAAS,eAOTnC,YAAA,CAAA,CAAAiC,KAAEY,EAAAA,MAAFV,KAAA,CAAS,iBAOTsG,mBAAA,CAAA,CAAAxG,KAAEY,EAAAA,MAAFV,KAAA,CAAS,eAQT6B,kBAAA,CAAA,CAAA/B,KAAEY,EAAAA,MAAFV,KAAA,CAAS,cAQTuG,uBAAA,CAAA,CAAAzG,KAAEY,EAAAA,MAAFV,KAAA,CAAS,mBAQTwG,oBAAA,CAAA,CAAA1G,KAAEY,EAAAA,MAAFV,KAAA,CAAS,gBAOTyG,kBAAA,CAAA,CAAA3G,KAAEY,EAAAA,MAAFV,KAAA,CAAS,cAST0G,oBAAA,CAAA,CAAA5G,KAAEY,EAAAA,MAAFV,KAAA,CAAS,gBAST2G,oBAAA,CAAA,CAAA7G,KAAEY,EAAAA,MAAFV,KAAA,CAAS,gBAYT4G,qBAAA,CAAA,CAAA9G,KAAEY,EAAAA,MAAFV,KAAA,CAAS,iBAQT6G,iBAAA,CAAA,CAAA/G,KAAEY,EAAAA,MAAFV,KAAA,CAAS,aAST8G,uBAAA,CAAA,CAAAhH,KAAEY,EAAAA,MAAFV,KAAA,CAAS,mBAQT+G,gBAAA,CAAA,CAAAjH,KAAEY,EAAAA,MAAFV,KAAA,CAAS,YAOTgH,oBAAA,CAAA,CAAAlH,KAAEY,EAAAA,MAAFV,KAAA,CAAS,gBAOTiH,uBAAA,CAAA,CAAAnH,KAAEY,EAAAA,MAAFV,KAAA,CAAS,mBAOTkH,uBAAA,CAAA,CAAApH,KAAEY,EAAAA,MAAFV,KAAA,CAAS,mBAOTmH,gBAAA,CAAA,CAAArH,KAAEY,EAAAA,MAAFV,KAAA,CAAS,YAOToH,gBAAA,CAAA,CAAAtH,KAAEY,EAAAA,MAAFV,KAAA,CAAS,YAOTqH,iBAAA,CAAA,CAAAvH,KAAEY,EAAAA,MAAFV,KAAA,CAAS,aAOTsH,iBAAA,CAAA,CAAAxH,KAAEY,EAAAA,MAAFV,KAAA,CAAS,aAOTuH,yBAAA,CAAA,CAAAzH,KAAEY,EAAAA,MAAFV,KAAA,CAAS,qBAOTwH,cAAA,CAAA,CAAA1H,KAAEY,EAAAA,MAAFV,KAAA,CAAS,UAOTyH,mBAAA,CAAA,CAAA3H,KAAEY,EAAAA,MAAFV,KAAA,CAAS,eAQT0H,oBAAA,CAAA,CAAA5H,KAAEY,EAAAA,MAAFV,KAAA,CAAS,gBAOT2H,mBAAA,CAAA,CAAA7H,KAAEY,EAAAA,MAAFV,KAAA,CAAS,eAOT4H,mBAAA,CAAA,CAAA9H,KAAEY,EAAAA,MAAFV,KAAA,CAAS,eAOT6H,+BAAA,CAAA,CAAA/H,KAAEY,EAAAA,MAAFV,KAAA,CAAS,2BAQT8H,gBAAA,CAAA,CAAAhI,KAAEY,EAAAA,MAAFV,KAAA,CAAS,YAOT+H,mBAAA,CAAA,CAAAjI,KAAEY,EAAAA,MAAFV,KAAA,CAAS,eAETgI,aAAA,CAAA,CAAAlI,KAAEY,EAAAA,MAAFV,KAAA,CAAS,SAOTiI,qBAAA,CAAA,CAAAnI,KAAEY,EAAAA,MAAFV,KAAA,CAAS,iBAOTkI,cAAA,CAAA,CAAApI,KAAEY,EAAAA,MAAFV,KAAA,CAAS,UAOTiB,kBAAA,CAAA,CAAAnB,KAAEqI,EAAAA,OAAFnI,KAAA,CAAU,cAOVmB,iBAAA,CAAA,CAAArB,KAAEqI,EAAAA,OAAFnI,KAAA,CAAU,aAOVoB,gBAAA,CAAA,CAAAtB,KAAEqI,EAAAA,OAAFnI,KAAA,CAAU,YAOVqB,iBAAA,CAAA,CAAAvB,KAAEqI,EAAAA,OAAFnI,KAAA,CAAU,aAGVsB,QAAA,CAAA,CAAAxB,KAAEsI,EAAAA,aAAFpI,KAAA,CAAgB,eCtRhB,IAAAqI,EAAA,SAAAA,oBAKA,CAAAvI,KAACwI,EAAAA,SAADtI,KAAA,CAAU,CACNuI,QAAS,CAACC,EAAAA,cACVC,aAAc,CACVtL,EACAyD,GAEJ8H,QAAS,CACLvL,EACAyD"
}
